class Solution {
public:
    vector<vector<int>> result;
    vector<int> path;

    void T(vector<int>& nums, int start, vector<bool> &used){
        result.push_back(path);
        for(int i = start; i < nums.size(); i++){
            if(i > 0 && used[i - 1] == false && nums[i] == nums[i - 1]){
                continue;
            }
            path.push_back(nums[i]);
            used[i] = true;
            T(nums, i + 1, used);
            used[i] = false;
            path.pop_back();

        }
    }

    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<bool> used(nums.size());
        sort(nums.begin(), nums.end());
        T(nums, 0, used);
        return result;
    }
};
