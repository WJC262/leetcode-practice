/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool T(TreeNode* root, int count){
        if(root->right == NULL && root->left == NULL && count == 0){
            return true;
        }
        if(root->right == NULL && root->left == NULL){
            return false;
        }

        if(root->left){
            count -= root->left->val;
            if(T(root->left, count) == true){
                return true;
            }
            count += root->left->val;
        }

        if(root->right){
            count -= root->right->val;
            if(T(root->right, count) == true){
                return true;
            }
            count += root->right->val;
        }
        return false;
    }


    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root == NULL){
            return false;
        }
        if(T(root, targetSum - root->val)){
            return true;
        }else{
            return false;
        }
    }
};
