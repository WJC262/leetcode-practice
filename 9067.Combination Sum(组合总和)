class Solution {
public:
    vector<vector<int>> result;
    vector<int> path;

    void T(vector<int>& candidates, int target, int sum, int startNum){
        if(sum > target){
            return;
        }
        if(sum == target){
            result.push_back(path);
            return;
        }
        for(int i = startNum; i < candidates.size(); i++){
            sum += candidates[i];
            path.push_back(candidates[i]);
            T(candidates, target, sum, i);
            path.pop_back();
            sum -= candidates[i];
        }

    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        T(candidates, target, 0, 0);
        return result;
    }
};
